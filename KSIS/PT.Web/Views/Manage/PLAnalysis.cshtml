@{
    ViewBag.Title = "KSIS(KCC E&C SMART INFORMATION SYSTEM)";
}

<!-- 콘텐츠 -->
<div id="contents">
    <!-- 사이드메뉴 -->
    <div class="contents_left1">
        <a href="/Manage/PLAnalysis" class="txt_red">현장별</a>
        <a href="/Manage/PLAnalysisSC">외주</a>
        <a href="/Manage/PLAnalysisPR">자재</a>
        <a href="/Manage/PLAnalysisTerm">기간별</a>
        <a href="/Manage/PLAnalysisMember">인원별</a>

    </div>
    <!-- //사이드메뉴 -->
    <!-- 콘텐츠(상세) -->
    <div class="contents_right1">
        <div id="GW00001" class="boxother8">
            <h1 class="title1">차트#1 예제</h1>
            <div id="chart_ex1" class="chart" style="height:400px;width:auto;"></div>
        </div>

        <div id="GW00002" class="boxother8">
            <h1 class="title1">차트#2 예제</h1>
            <div id="chart_ex2" class="chart" style="height:400px;width:auto;"></div>
        </div>

        <div id="GW00003" class="boxother8">
            <h1 class="title1">차트#3 예제</h1>
            <div id="chart_ex3" class="chart" style="height:400px;width:auto"></div>
        </div>
        <div id="GW00003" class="boxother8">
            <h1 class="title1">차트#4 예제</h1>
            <div id="chart_ex4" class="chart" style="height:400px;width:auto"></div>
        </div>
    </div>

</div>
<!-- //콘텐츠 -->

<script type="text/javascript">

    //************ 로드 ************//
    var text1 = "", text2 = "", text3 = "", text4 = "";
    var DeptCd = ""
    var BizPartCd = "KCCENC"
    // 페이지 로드 시
    $(document).ready(function (e) {
        chart_ex1("", "");
        chart_ex2("", "");
        chart_ex3("", "");
        chart_ex4("", "");
    });

    //************ Ajax ************//

    function Listchart_ex1(pDeptCd, pEmpNo) {
        // 그래프 키값 숫자형 처리된 데이터를 담기위한 변수
        var jsonData = [];

        $.ajax({
            type: "POST",
            url: "/AjaxAuth/ListPLAnalysis",
            dataType: "json",
            data: { "pDeptCd": pDeptCd, "pEmpNo": pEmpNo },
            async: false,   // 동기식 처리
            success: function (data) {
                // Json 데이터 y축 그래프 값 숫자형 처리
                for (i = 0; i < data.length; i++) {
                    var arrData = {};
                    arrData.y = parseFloat(data[i].TOTAMT);
                    arrData.name = data[i].NUM;
                    //arrData.color = data[i].Color;
                    arrData.value = data[i].AVRTIMEP;

                    jsonData.push(arrData);

                }
            },
            error: function (e) {
                alert("에러 발생.");
                return false;
            }
        });

        return jsonData;
    }

    function Listchart_ex2(pDeptCd, pEmpNo) {
        // 그래프 키값 숫자형 처리된 데이터를 담기위한 변수
        var jsonData = [];

        $.ajax({
            type: "POST",
            url: "/AjaxAuth/ListPLAnalysis",
            dataType: "json",
            data: { "pDeptCd": pDeptCd, "pEmpNo": pEmpNo },
            async: false,   // 동기식 처리
            success: function (data) {
                // Json 데이터 y축 그래프 값 숫자형 처리
                for (i = 0; i < data.length; i++) {
                    var arrData = {};
                    arrData.y = parseFloat(data[i].TOTAMT);
                    arrData.name = data[i].NUM;
                    //arrData.color = data[i].Color;
                    arrData.value = data[i].AVRTIMEP;

                    jsonData.push(arrData);

                }
            },
            error: function (e) {
                alert("에러 발생.");
                return false;
            }
        });

        return jsonData;
    }

    function Listchart_ex3(pDeptCd, pEmpNo) {
        // 그래프 키값 숫자형 처리된 데이터를 담기위한 변수
        var jsonData = [];

        $.ajax({
            type: "POST",
            url: "/AjaxAuth/ListPLAnalysis",
            dataType: "json",
            data: { "pDeptCd": pDeptCd, "pEmpNo": pEmpNo },
            async: false,   // 동기식 처리
            success: function (data) {
                // Json 데이터 y축 그래프 값 숫자형 처리
                for (i = 0; i < data.length; i++) {
                    var arrData = {};
                    arrData.y = parseFloat(data[i].TOTAMT);
                    arrData.name = data[i].NUM;
                    //arrData.color = data[i].Color;
                    arrData.value = data[i].AVRTIMEP;

                    jsonData.push(arrData);

                }
            },
            error: function (e) {
                alert("에러 발생.");
                return false;
            }
        });

        return jsonData;
    }

    function Listchart_ex4(pDeptCd, pEmpNo) {
        // 그래프 키값 숫자형 처리된 데이터를 담기위한 변수
        var jsonData = [];

        $.ajax({
            type: "POST",
            url: "/AjaxAuth/ListPLAnalysis",
            dataType: "json",
            data: { "pDeptCd": pDeptCd, "pEmpNo": pEmpNo },
            async: false,   // 동기식 처리
            success: function (data) {
                // Json 데이터 y축 그래프 값 숫자형 처리
                for (i = 0; i < data.length; i++) {
                    var arrData = {};
                    arrData.y = parseFloat(data[i].TOTAMT);
                    arrData.name = data[i].NUM;
                    //arrData.color = data[i].Color;
                    arrData.value = data[i].AVRTIMEP;

                    jsonData.push(arrData);

                }
            },
            error: function (e) {
                alert("에러 발생.");
                return false;
            }
        });

        return jsonData;
    }


    //************ 함수 ************//

    function chart_ex1(pDeptCd, pEmpNo) {
        // 그래프 데이터 조회
        var jsonData = Listchart_ex1("@Session["DeptCd"]", "@Session["EmpNo"]");
        text4 = jsonData[0].name;
        // 그래프 데이터가 없는 경우
        if (jsonData == null) {
            alert("퇴근시간현황 데이터를 조회하지 못했습니다.");
            return false;
        }

        if (text2 == "") {
            text2 = jsonData[0].name;
        }

        // 차트 생성
        $("#chart_ex1").highcharts({


            title: {
                text: '',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    color: "#6d6d6d"
                }
            },

            chart: {
                type: 'column',
            },

            xAxis: {
                type: 'category',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    color: "#6d6d6d"
                }
            },

            yAxis: {
                title: {
                    text: ''
                },
                labels: {
                    //format: "{value}",
                    style: {
                        fontfamily: "NanumGothic",
                        fontSize: "12px",
                        color: "#6d6d6d"
                    }
                }
            },


            tooltip: {
                headerFormat: '',
                pointFormat: '{point.value}',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    fontweight : "bold",
                    color: "#6d6d6d"
                },
            },

            plotOptions: {
                series: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {
                                text3 = this.name;
                                //CreateChartDeptVacationCnt(this.name);
                            }
                        }
                    }
                },
                column: {

                    pointPadding: 0,
                    borderWidth: 0
                },
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "10px",
                    color: "#6d6d6d"
                }
            },
            credits: {
                enabled: false
            },
            series: [{
                data: jsonData,
                showInLegend: false,
                color: '#d42c2c',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "10px",
                    color: "#6d6d6d"
                },
                marker: {
                    lineWidth: 2,
                    lineColor: '#ec4fa0',
                    fillColor: 'white'

                }
            }]


        });

    }



    function chart_ex2(pDeptCd, pEmpNo) {
        // 그래프 데이터 조회
        var jsonData = Listchart_ex2("@Session["DeptCd"]", "@Session["EmpNo"]");
        text4 = jsonData[0].name;
        // 그래프 데이터가 없는 경우
        if (jsonData == null) {
            alert("퇴근시간현황 데이터를 조회하지 못했습니다.");
            return false;
        }

        if (text2 == "") {
            text2 = jsonData[0].name;
        }

        // 차트 생성
        $("#chart_ex2").highcharts({


            title: {
                text: '',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    color: "#6d6d6d"
                }
            },

            chart: {
                type: 'line',
            },

            xAxis: {
                type: 'category',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    color: "#6d6d6d"
                }
            },

            yAxis: {
                title: {
                    text: ''
                },
                labels: {
                    //format: "{value}",
                    style: {
                        fontfamily: "NanumGothic",
                        fontSize: "12px",
                        color: "#6d6d6d"
                    }
                }
            },


            tooltip: {
                headerFormat: '',
                pointFormat: '{point.value}',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    fontweight : "bold",
                    color: "#6d6d6d"
                },
            },

            plotOptions: {
                series: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {
                                text3 = this.name;
                                //CreateChartDeptVacationCnt(this.name);
                            }
                        }
                    }
                },
                column: {

                    pointPadding: 0,
                    borderWidth: 0
                },
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "10px",
                    color: "#6d6d6d"
                }
            },
            credits: {
                enabled: false
            },
            series: [{
                data: jsonData,
                showInLegend: false,
                color: '#d42c2c',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "10px",
                    color: "#6d6d6d"
                },
                marker: {
                    lineWidth: 2,
                    lineColor: '#ec4fa0',
                    fillColor: 'white'

                }
            }]


        });

    }





    function chart_ex3(pDeptCd, pEmpNo) {
        // 그래프 데이터 조회
        var jsonData = Listchart_ex3("@Session["DeptCd"]", "@Session["EmpNo"]");
        text4 = jsonData[0].name;
        // 그래프 데이터가 없는 경우
        if (jsonData == null) {
            alert("퇴근시간현황 데이터를 조회하지 못했습니다.");
            return false;
        }

        if (text2 == "") {
            text2 = jsonData[0].name;
        }

        // 차트 생성
        $("#chart_ex3").highcharts({


            title: {
                text: '',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    color: "#6d6d6d"
                }
            },

            chart: {
                type: "pie",
                options3d: {
                    enabled: true,
                    alpha: 45,
                    beta: 0
                }
            },

            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    depth: 35,
                    dataLabels: {
                        enabled: true,
                        formatter: function () {
                            return this.point.name;
                        },
                        style: {
                            fontfamily: "NanumGothic",
                            fontSize: "10px",
                            color: "#6d6d6d"
                        }
                    },
                    enableMouseTracking: false
                }
            },

            


            tooltip: {
                headerFormat: '',
                pointFormat: '{point.value}',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "13px",
                    fontweight : "bold",
                    color: "#6d6d6d"
                },
            },

            
            credits: {
                enabled: false
            },
            series: [{
                data: jsonData,
                showInLegend: false,
                color: '#d42c2c',
                style: {
                    fontfamily: "NanumGothic",
                    fontSize: "10px",
                    color: "#6d6d6d"
                },
                marker: {
                    lineWidth: 2,
                    lineColor: '#ec4fa0',
                    fillColor: 'white'

                }
            }]


        });

    }

    function chart_ex4(pDeptCd, pEmpNo) {
        // 그래프 데이터 조회
        var jsonData = Listchart_ex4("@Session["DeptCd"]", "@Session["EmpNo"]");
        text4 = jsonData[0].name;
        // 그래프 데이터가 없는 경우
        if (jsonData == null) {
            alert("퇴근시간현황 데이터를 조회하지 못했습니다.");
            return false;
        }

        if (text2 == "") {
            text2 = jsonData[0].name;
        }

        // 차트 생성
        $("#chart_ex4").highcharts({

            title: {
                text: ''
            },
            //subtitle: {
            //    text: 'Polygon series in Highcharts'
            //},
            xAxis: {
                gridLineWidth: 1,
                //title: {
                //    enabled: true,
                //    text: 'Height (cm)'
                //},
                startOnTick: true,
                endOnTick: true,
                showLastLabel: true
            },
            yAxis: {
                title: {
                    text: ''
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle'
            },
            series: [{
                name: '분포도 범위',
                type: 'polygon',
                data: [[153, 42], [149, 46], [149, 55], [152, 60], [159, 70], [170, 77], [180, 70],
                [180, 60], [173, 52], [166, 45]],
                color: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.5).get(),
                enableMouseTracking: false

            }, {
                name: '개별 분포도',
                type: 'scatter',
                color: Highcharts.getOptions().colors[1],
                data: [[161.2, 51.6], [167.5, 59.0], [159.5, 49.2], [157.0, 63.0], [155.8, 53.6],
                [170.0, 59.0], [159.1, 47.6], [166.0, 69.8], [176.2, 66.8], [160.2, 75.2],
                [172.5, 55.2], [170.9, 54.2], [172.9, 62.5], [153.4, 42.0], [160.0, 50.0],
                [147.2, 49.8], [168.2, 49.2], [175.0, 73.2], [157.0, 47.8], [167.6, 68.8],
                [159.5, 50.6], [175.0, 82.5], [166.8, 57.2], [176.5, 87.8], [170.2, 72.8],
                [174.0, 54.5], [173.0, 59.8], [179.9, 67.3], [170.5, 67.8], [160.0, 47.0],
                [154.4, 46.2], [162.0, 55.0], [176.5, 83.0], [160.0, 54.4], [152.0, 45.8],
                [162.1, 53.6], [170.0, 73.2], [160.2, 52.1], [161.3, 67.9], [166.4, 56.6],
                [168.9, 62.3], [163.8, 58.5], [167.6, 54.5], [160.0, 50.2], [161.3, 60.3],
                [167.6, 58.3], [165.1, 56.2], [160.0, 50.2], [170.0, 72.9], [157.5, 59.8],
                [167.6, 61.0], [160.7, 69.1], [163.2, 55.9], [152.4, 46.5], [157.5, 54.3],
                [168.3, 54.8], [180.3, 60.7], [165.5, 60.0], [165.0, 62.0], [164.5, 60.3],
                [156.0, 52.7], [160.0, 74.3], [163.0, 62.0], [165.7, 73.1], [161.0, 80.0],
                [162.0, 54.7], [166.0, 53.2], [174.0, 75.7], [172.7, 61.1], [167.6, 55.7],
                [151.1, 48.7], [164.5, 52.3], [163.5, 50.0], [152.0, 59.3], [169.0, 62.5],
                [164.0, 55.7], [161.2, 54.8], [155.0, 45.9], [170.0, 70.6], [176.2, 67.2],
                [170.0, 69.4], [162.5, 58.2], [170.3, 64.8], [164.1, 71.6], [169.5, 52.8],
                [163.2, 59.8], [154.5, 49.0], [159.8, 50.0], [173.2, 69.2], [170.0, 55.9],
                [161.4, 63.4], [169.0, 58.2], [166.2, 58.6], [159.4, 45.7], [162.5, 52.2],
                [159.0, 48.6], [162.8, 57.8], [159.0, 55.6], [179.8, 66.8], [162.9, 59.4],
                [161.0, 53.6], [151.1, 73.2], [168.2, 53.4], [168.9, 69.0], [173.2, 58.4],
                [171.8, 56.2], [178.0, 70.6], [164.3, 59.8], [163.0, 72.0], [168.5, 65.2],
                [166.8, 56.6], [172.7, 105.2], [163.5, 51.8], [169.4, 63.4], [167.8, 59.0],
                [159.5, 47.6], [167.6, 63.0], [161.2, 55.2], [160.0, 45.0], [163.2, 54.0],
                [162.2, 50.2], [161.3, 60.2], [149.5, 44.8], [157.5, 58.8], [163.2, 56.4],
                [172.7, 62.0], [155.0, 49.2], [156.5, 67.2], [164.0, 53.8], [160.9, 54.4],
                [162.8, 58.0], [167.0, 59.8], [160.0, 54.8], [160.0, 43.2], [168.9, 60.5],
                [158.2, 46.4], [156.0, 64.4], [160.0, 48.8], [167.1, 62.2], [158.0, 55.5],
                [167.6, 57.8], [156.0, 54.6], [162.1, 59.2], [173.4, 52.7], [159.8, 53.2],
                [170.5, 64.5], [159.2, 51.8], [157.5, 56.0], [161.3, 63.6], [162.6, 63.2],
                [160.0, 59.5], [168.9, 56.8], [165.1, 64.1], [162.6, 50.0], [165.1, 72.3],
                [166.4, 55.0], [160.0, 55.9], [152.4, 60.4], [170.2, 69.1], [162.6, 84.5],
                [170.2, 55.9], [158.8, 55.5], [172.7, 69.5], [167.6, 76.4], [162.6, 61.4],
                [167.6, 65.9], [156.2, 58.6], [175.2, 66.8], [172.1, 56.6], [162.6, 58.6],
                [160.0, 55.9], [165.1, 59.1], [182.9, 81.8], [166.4, 70.7], [165.1, 56.8],
                [177.8, 60.0], [165.1, 58.2], [175.3, 72.7], [154.9, 54.1], [158.8, 49.1],
                [172.7, 75.9], [168.9, 55.0], [161.3, 57.3], [167.6, 55.0], [165.1, 65.5],
                [175.3, 65.5], [157.5, 48.6], [163.8, 58.6], [167.6, 63.6], [165.1, 55.2],
                [165.1, 62.7], [168.9, 56.6], [162.6, 53.9], [164.5, 63.2], [176.5, 73.6],
                [168.9, 62.0], [175.3, 63.6], [159.4, 53.2], [160.0, 53.4], [170.2, 55.0],
                [162.6, 70.5], [167.6, 54.5], [162.6, 54.5], [160.7, 55.9], [160.0, 59.0],
                [157.5, 63.6], [162.6, 54.5], [152.4, 47.3], [170.2, 67.7], [165.1, 80.9],
                [172.7, 70.5], [165.1, 60.9], [170.2, 63.6], [170.2, 54.5], [170.2, 59.1],
                [161.3, 70.5], [167.6, 52.7], [167.6, 62.7], [165.1, 86.3], [162.6, 66.4],
                [152.4, 67.3], [168.9, 63.0], [170.2, 73.6], [175.2, 62.3], [175.2, 57.7],
                [160.0, 55.4], [165.1, 104.1], [174.0, 55.5], [170.2, 77.3], [160.0, 80.5],
                [167.6, 64.5], [167.6, 72.3], [167.6, 61.4], [154.9, 58.2], [162.6, 81.8],
                [175.3, 63.6], [171.4, 53.4], [157.5, 54.5], [165.1, 53.6], [160.0, 60.0],
                [174.0, 73.6], [162.6, 61.4], [174.0, 55.5], [162.6, 63.6], [161.3, 60.9],
                [156.2, 60.0], [149.9, 46.8], [169.5, 57.3], [160.0, 64.1], [175.3, 63.6],
                [169.5, 67.3], [160.0, 75.5], [172.7, 68.2], [162.6, 61.4], [157.5, 76.8],
                [176.5, 71.8], [164.4, 55.5], [160.7, 48.6], [174.0, 66.4], [163.8, 67.3]]

            }],
            tooltip: {
                //headerFormat: '<b>{series.name}</b><br>',
                //pointFormat: '{point.x} cm, {point.y} kg'
            }


        });

    }



</script>